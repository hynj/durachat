async function C(o,t){let a;if(o instanceof Blob?a=o.stream():a=o,a instanceof ReadableStream&&t){const e=a.getReader();switch(t){case"callback":return async()=>(await e.read()).value;case"buffer":const i=[];let r=!1;for(;!r;){const h=await e.read();h.value&&i.push(h.value),r=h.done}const n=i.reduce((h,y)=>h+y.length,0),c=new Uint8Array(n);let u=0;return i.forEach(h=>{c.set(h,u),u+=h.length}),c.buffer}}else return a}function A(o){const t=o.split(/[\\/]/).filter(i=>i!==""),a=t.pop();if(!a)throw new Error("Database path is invalid.");const s=["journal","wal","shm"].map(i=>`${a}-${i}`);return{directories:t,fileName:a,tempFileNames:s,getDirectoryHandle:async()=>{let i=await navigator.storage.getDirectory();for(let r of t)i=await i.getDirectoryHandle(r);return i}}}class ${constructor(t){Object.defineProperty(this,"sqlite3InitModule",{enumerable:!0,configurable:!0,writable:!0,value:t}),Object.defineProperty(this,"sqlite3",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"db",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"config",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"pointers",{enumerable:!0,configurable:!0,writable:!0,value:[]}),Object.defineProperty(this,"storageType",{enumerable:!0,configurable:!0,writable:!0,value:"memory"})}async init(t){const{databasePath:a}=t,s=this.getFlags(t);if(!this.sqlite3InitModule){const{default:e}=await import("./chunks/CgHoJJBE.js");this.sqlite3InitModule=e}this.sqlite3||(this.sqlite3=await this.sqlite3InitModule()),this.db&&await this.destroy(),this.db=new this.sqlite3.oo1.DB(a,s),this.config=t}async exec(t){if(!this.db)throw new Error("Driver not initialized");return this.execOnDb(this.db,t)}async execBatch(t){if(!this.db)throw new Error("Driver not initialized");const a=[];return this.db.transaction(s=>{for(let e of t){const i=this.execOnDb(s,e);a.push(i)}}),a}async isDatabasePersisted(){return!1}async getDatabaseSizeBytes(){var s;const t=await this.exec({sql:`SELECT page_count * page_size AS size 
				FROM pragma_page_count(), pragma_page_size()`,method:"get"}),a=(s=t==null?void 0:t.rows)==null?void 0:s[0];if(typeof a!="number")throw new Error("Failed to query database size");return a}async createFunction(t){if(!this.db)throw new Error("Driver not initialized");switch(t.type){case"callback":case"scalar":this.db.createFunction({name:t.name,xFunc:(a,...s)=>t.func(...s),arity:-1});break;case"aggregate":this.db.createFunction({name:t.name,xStep:(a,...s)=>t.func.step(...s),xFinal:(a,...s)=>t.func.final(...s),arity:-1});break}}async import(t){if(!this.sqlite3||!this.db||!this.config)throw new Error("Driver not initialized");const a=await C(t,"buffer"),s=this.sqlite3.wasm.allocFromTypedArray(a);this.pointers.push(s);const e=this.sqlite3.capi.sqlite3_deserialize(this.db,"main",s,a.byteLength,a.byteLength,this.config.readOnly?this.sqlite3.capi.SQLITE_DESERIALIZE_READONLY:this.sqlite3.capi.SQLITE_DESERIALIZE_RESIZEABLE);this.db.checkRc(e)}async export(){if(!this.sqlite3||!this.db)throw new Error("Driver not initialized");return{name:"database.sqlite3",data:this.sqlite3.capi.sqlite3_js_db_export(this.db)}}async clear(){}async destroy(){this.closeDb(),this.pointers.forEach(t=>{var a;return(a=this.sqlite3)==null?void 0:a.wasm.dealloc(t)}),this.pointers=[]}getFlags(t){const{readOnly:a,verbose:s}=t;return[a===!0?"r":"cw",s===!0?"t":""].join("")}execOnDb(t,a){const s={rows:[],columns:[]},e=t.exec({sql:a.sql,bind:a.params,returnValue:"resultRows",rowMode:"array",columnNames:s.columns});switch(a.method){case"run":break;case"get":s.rows=e[0]??[];break;case"all":default:s.rows=e;break}return s}closeDb(){this.db&&(this.db.close(),this.db=void 0)}}class G extends ${constructor(){super(...arguments),Object.defineProperty(this,"storageType",{enumerable:!0,configurable:!0,writable:!0,value:"opfs"})}async init(t){const{databasePath:a}=t,s=this.getFlags(t);if(!a)throw new Error("No databasePath specified");if(!this.sqlite3InitModule){const{default:e}=await import("./chunks/CgHoJJBE.js");this.sqlite3InitModule=e}if(this.sqlite3||(this.sqlite3=await this.sqlite3InitModule()),!("opfs"in this.sqlite3))throw new Error("OPFS not available");this.db&&await this.destroy(),this.db=new this.sqlite3.oo1.OpfsDb(a,s),this.config=t}async isDatabasePersisted(){var t;return(t=navigator.storage)==null?void 0:t.persisted()}async import(t){var s;if(!this.sqlite3||!((s=this.config)!=null&&s.databasePath))throw new Error("Driver not initialized");await this.destroy();const a=await C(t,"callback");await this.sqlite3.oo1.OpfsDb.importDb(this.config.databasePath,a)}async export(){var y;if(!this.db||!((y=this.config)!=null&&y.databasePath))throw new Error("Driver not initialized");let t,a;const s=A(this.config.databasePath),{directories:e,getDirectoryHandle:i}=s;t=s.fileName;const r=`backup-${Date.now()}--${t}`,n=`${e.join("/")}/${r}`;this.db.exec({sql:"VACUUM INTO ?",bind:[n]});const c=await i();return a=await(await(await c.getFileHandle(r)).getFile()).arrayBuffer(),await c.removeEntry(r),{name:t,data:a}}async clear(){var r;if(!((r=this.config)!=null&&r.databasePath))throw new Error("Driver not initialized");await this.destroy();const{getDirectoryHandle:t,fileName:a,tempFileNames:s}=A(this.config.databasePath),e=await t(),i=[a,...s];await Promise.all(i.map(async n=>e.removeEntry(n).catch(c=>{if(!(c instanceof DOMException&&c.name==="NotFoundError"))throw c})))}async destroy(){this.closeDb()}}const N="function",M="64e10b34-2bf7-4616-9668-f99de5aa046e",Y="get",J="has",Z="set",{isArray:D}=Array;let{SharedArrayBuffer:x,window:V}=globalThis,{notify:H,wait:R,waitAsync:O}=Atomics,U=null;O||(O=o=>({value:new Promise(t=>{let a=new Worker("data:application/javascript,onmessage%3D(%7Bdata%3Ab%7D)%3D%3E(Atomics.wait(b%2C0)%2CpostMessage(0))");a.onmessage=t,a.postMessage(o)})}));try{new x(4)}catch{x=ArrayBuffer;const t=new WeakMap;if(V){const a=new Map,{prototype:{postMessage:s}}=Worker,e=i=>{var n;const r=(n=i.data)==null?void 0:n[M];if(!D(r)){i.stopImmediatePropagation();const{id:c,sb:u}=r;a.get(c)(u)}};U=function(i,...r){const n=i==null?void 0:i[M];if(D(n)){const[c,u]=n;t.set(u,c),this.addEventListener("message",e)}return s.call(this,i,...r)},O=i=>({value:new Promise(r=>{a.set(t.get(i),r)}).then(r=>{a.delete(t.get(i)),t.delete(i);for(let n=0;n<r.length;n++)i[n]=r[n];return"ok"})})}else{const a=(s,e)=>({[M]:{id:s,sb:e}});H=s=>{postMessage(a(t.get(s),s))},addEventListener("message",s=>{var i;const e=(i=s.data)==null?void 0:i[M];if(D(e)){const[r,n]=e;t.set(n,r)}})}}/*! (c) Andrea Giammarchi - ISC */const{Int32Array:I,Map:L,Uint16Array:j}=globalThis,{BYTES_PER_ELEMENT:z}=I,{BYTES_PER_ELEMENT:X}=j,ee=(o,t,a)=>{for(;R(o,0,0,t)==="timed-out";)a()},T=new WeakSet,S=new WeakMap,te={value:{then:o=>o()}};let ie=0;const W=(o,{parse:t=JSON.parse,stringify:a=JSON.stringify,transform:s,interrupt:e}=JSON)=>{if(!S.has(o)){const i=U||o.postMessage,r=(f,...l)=>i.call(o,{[M]:l},{transfer:f}),n=typeof e===N?e:e==null?void 0:e.handler,c=(e==null?void 0:e.delay)||42,u=new TextDecoder("utf-16"),h=(f,l)=>f?O(l,0):(n?ee(l,c,n):R(l,0),te);let y=!1;S.set(o,new Proxy(new L,{[J]:(f,l)=>typeof l=="string"&&!l.startsWith("_"),[Y]:(f,l)=>l==="then"?null:(...w)=>{const q=ie++;let d=new I(new x(z*2)),m=[];T.has(w.at(-1)||m)&&T.delete(m=w.pop()),r(m,q,d,l,s?w.map(s):w);const v=o!==globalThis;let k=0;return y&&v&&(k=setTimeout(console.warn,1e3,`ðŸ’€ðŸ”’ - Possible deadlock if proxy.${l}(...args) is awaited`)),h(v,d).value.then(()=>{clearTimeout(k);const p=d[1];if(!p)return;const g=X*p;return d=new I(new x(g+g%z)),r([],q,d),h(v,d).value.then(()=>t(u.decode(new j(d.buffer).slice(0,p))))})},[Z](f,l,w){const q=typeof w;if(q!==N)throw new Error(`Unable to assign ${l} as ${q}`);if(!f.size){const d=new L;o.addEventListener("message",async m=>{var k;const v=(k=m.data)==null?void 0:k[M];if(D(v)){m.stopImmediatePropagation();const[p,g,...F]=v;let E;if(F.length){const[P,_]=F;if(f.has(P)){y=!0;try{const b=await f.get(P)(..._);if(b!==void 0){const K=a(s?s(b):b);d.set(p,K),g[1]=K.length}}catch(b){E=b}finally{y=!1}}else E=new Error(`Unsupported action: ${P}`);g[0]=1}else{const P=d.get(p);d.delete(p);for(let _=new j(g.buffer),b=0;b<P.length;b++)_[b]=P.charCodeAt(b)}if(H(g,0),E)throw E}})}return!!f.set(l,w)}}))}return S.get(o)};W.transfer=(...o)=>(T.add(o),o);function B(){let o,t;return{lock:async()=>{for(;o;)await o;o=new Promise(e=>{t=e})},unlock:async()=>{const e=t;o=void 0,t=void 0,e==null||e()}}}class ae{constructor(t){Object.defineProperty(this,"driver",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"config",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"userFunctions",{enumerable:!0,configurable:!0,writable:!0,value:new Map}),Object.defineProperty(this,"initMutex",{enumerable:!0,configurable:!0,writable:!0,value:B()}),Object.defineProperty(this,"transactionMutex",{enumerable:!0,configurable:!0,writable:!0,value:B()}),Object.defineProperty(this,"transactionKey",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,"proxy",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"reinitChannel",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onmessage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"init",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{if(this.config.databasePath){await this.initMutex.lock();try{try{await this.driver.init(this.config)}catch{console.warn(`Persistence failed, so ${this.config.databasePath} will not be saved. For origin private file system persistence, make sure your web server is configured to use the correct HTTP response headers (See https://sqlocal.dev/guide/setup#cross-origin-isolation).`),this.config.databasePath=":memory:",this.driver=new $,await this.driver.init(this.config)}this.driver.storageType!=="memory"&&(this.reinitChannel=new BroadcastChannel(`_sqlocal_reinit_(${this.config.databasePath})`),this.reinitChannel.onmessage=i=>{const r=i.data;if(this.config.clientKey!==r.clientKey)switch(r.type){case"reinit":this.init(r.reason);break;case"close":this.driver.destroy();break}}),await Promise.all(Array.from(this.userFunctions.values()).map(i=>this.initUserFunction(i))),await this.execInitStatements(),this.emitMessage({type:"event",event:"connect",reason:e})}catch(i){this.emitMessage({type:"error",error:i,queryKey:null}),await this.destroy()}finally{await this.initMutex.unlock()}}}}),Object.defineProperty(this,"postMessage",{enumerable:!0,configurable:!0,writable:!0,value:async(e,i)=>{const r=e instanceof MessageEvent?e.data:e;switch(await this.initMutex.lock(),r.type){case"config":this.editConfig(r);break;case"query":case"batch":case"transaction":this.exec(r);break;case"function":this.createUserFunction(r);break;case"getinfo":this.getDatabaseInfo(r);break;case"import":this.importDb(r);break;case"export":this.exportDb(r);break;case"delete":this.deleteDb(r);break;case"destroy":this.destroy(r);break}await this.initMutex.unlock()}}),Object.defineProperty(this,"emitMessage",{enumerable:!0,configurable:!0,writable:!0,value:(e,i=[])=>{this.onmessage&&this.onmessage(e,i)}}),Object.defineProperty(this,"editConfig",{enumerable:!0,configurable:!0,writable:!0,value:e=>{this.config=e.config,this.init("initial")}}),Object.defineProperty(this,"exec",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{try{const i={type:"data",queryKey:e.queryKey,data:[]};switch(e.type){case"query":const r=this.transactionKey!==null&&this.transactionKey===e.transactionKey;try{r||await this.transactionMutex.lock();const n=await this.driver.exec(e);i.data.push(n)}finally{r||await this.transactionMutex.unlock()}break;case"batch":try{await this.transactionMutex.lock();const n=await this.driver.execBatch(e.statements);i.data.push(...n)}finally{await this.transactionMutex.unlock()}break;case"transaction":if(e.action==="begin"&&(await this.transactionMutex.lock(),this.transactionKey=e.transactionKey,await this.driver.exec({sql:"BEGIN"})),(e.action==="commit"||e.action==="rollback")&&this.transactionKey!==null&&this.transactionKey===e.transactionKey){const n=e.action==="commit"?"COMMIT":"ROLLBACK";await this.driver.exec({sql:n}),this.transactionKey=null,await this.transactionMutex.unlock()}break}this.emitMessage(i)}catch(i){this.emitMessage({type:"error",error:i,queryKey:e.queryKey})}}}),Object.defineProperty(this,"execInitStatements",{enumerable:!0,configurable:!0,writable:!0,value:async()=>{if(this.config.onInitStatements)for(let e of this.config.onInitStatements)await this.driver.exec(e)}}),Object.defineProperty(this,"getDatabaseInfo",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{try{this.emitMessage({type:"info",queryKey:e.queryKey,info:{databasePath:this.config.databasePath,storageType:this.driver.storageType,databaseSizeBytes:await this.driver.getDatabaseSizeBytes(),persisted:await this.driver.isDatabasePersisted()}})}catch(i){this.emitMessage({type:"error",queryKey:e.queryKey,error:i})}}}),Object.defineProperty(this,"createUserFunction",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{functionName:i,functionType:r,queryKey:n}=e;let c;if(this.userFunctions.has(i)){this.emitMessage({type:"error",error:new Error(`A user-defined function with the name "${i}" has already been created for this SQLocal instance.`),queryKey:n});return}switch(r){case"callback":c={type:r,name:i,func:(...u)=>{this.emitMessage({type:"callback",name:i,args:u})}};break;case"scalar":c={type:r,name:i,func:this.proxy[`_sqlocal_func_${i}`]};break;case"aggregate":c={type:r,name:i,func:{step:this.proxy[`_sqlocal_func_${i}_step`],final:this.proxy[`_sqlocal_func_${i}_final`]}};break}try{await this.initUserFunction(c),this.emitMessage({type:"success",queryKey:n})}catch(u){this.emitMessage({type:"error",error:u,queryKey:n})}}}),Object.defineProperty(this,"initUserFunction",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{await this.driver.createFunction(e),this.userFunctions.set(e.name,e)}}),Object.defineProperty(this,"importDb",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{queryKey:i,database:r}=e;let n=!1;try{await this.driver.import(r),this.driver.storageType==="memory"&&await this.execInitStatements()}catch(c){this.emitMessage({type:"error",error:c,queryKey:i}),n=!0}finally{this.driver.storageType!=="memory"&&await this.init("overwrite")}n||this.emitMessage({type:"success",queryKey:i})}}),Object.defineProperty(this,"exportDb",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{queryKey:i}=e;try{const{name:r,data:n}=await this.driver.export();this.emitMessage({type:"buffer",queryKey:i,bufferName:r,buffer:n},[n])}catch(r){this.emitMessage({type:"error",error:r,queryKey:i})}}}),Object.defineProperty(this,"deleteDb",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{const{queryKey:i}=e;let r=!1;try{await this.driver.clear()}catch(n){this.emitMessage({type:"error",error:n,queryKey:i}),r=!0}finally{await this.init("delete")}r||this.emitMessage({type:"success",queryKey:i})}}),Object.defineProperty(this,"destroy",{enumerable:!0,configurable:!0,writable:!0,value:async e=>{await this.driver.exec({sql:"PRAGMA optimize"}),await this.driver.destroy(),this.reinitChannel&&(this.reinitChannel.close(),this.reinitChannel=void 0),e&&this.emitMessage({type:"success",queryKey:e.queryKey})}});const s=typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope?W(globalThis):globalThis;this.proxy=s,this.driver=t}}const re=new G,Q=new ae(re);self.onmessage=o=>{Q.postMessage(o)};Q.onmessage=(o,t)=>{self.postMessage(o,t)};
