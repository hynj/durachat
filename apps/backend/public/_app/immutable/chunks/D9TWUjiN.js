var j=Object.defineProperty;var W=(n,e,t)=>e in n?j(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var c=(n,e,t)=>W(n,typeof e!="symbol"?e+"":e,t);import{e as D,s as f,a,t as i,b as S,f as z,S as B,d as J,o as R,c as x,g as b,h as Z,j as P}from"./D0RciOE6.js";import{c as q}from"./B6bYGZD0.js";var F;F=D;class w{constructor(e,t){this.name=e,this.unique=t}on(...e){return new K(this.name,e,this.unique)}}c(w,F,"SQLiteIndexBuilderOn");var M;M=D;class K{constructor(e,t,s){c(this,"config");this.config={name:e,columns:t,unique:s,where:void 0}}where(e){return this.config.where=e,this}build(e){return new Y(this.config,e)}}c(K,M,"SQLiteIndexBuilder");var $;$=D;class Y{constructor(e,t){c(this,"config");this.config={...e,table:t}}}c(Y,$,"SQLiteIndex");function g(n){return new w(n,!1)}function X(n){return new w(n,!0)}const H="CREATE TABLE `attachments` (\n	`id` text PRIMARY KEY NOT NULL,\n	`message_id` text NOT NULL,\n	`file_name` text NOT NULL,\n	`file_type` text NOT NULL,\n	`file_size` integer NOT NULL,\n	`mime_type` text NOT NULL,\n	`data` blob,\n	`storage_url` text,\n	`created_at` integer NOT NULL,\n	`last_sync_at` integer,\n	`is_deleted` integer DEFAULT false,\n	FOREIGN KEY (`message_id`) REFERENCES `messages`(`id`) ON UPDATE no action ON DELETE cascade\n);\n--> statement-breakpoint\nCREATE INDEX `attachments_message_id_idx` ON `attachments` (`message_id`);--> statement-breakpoint\nCREATE TABLE `conversations` (\n	`id` text PRIMARY KEY NOT NULL,\n	`title` text NOT NULL,\n	`model` text NOT NULL,\n	`provider` text NOT NULL,\n	`system_prompt` text,\n	`is_shared` integer DEFAULT false,\n	`share_id` text,\n	`parent_id` text,\n	`branch_point` integer,\n	`created_at` integer NOT NULL,\n	`updated_at` integer NOT NULL,\n	`last_sync_at` integer,\n	`is_deleted` integer DEFAULT false,\n	FOREIGN KEY (`parent_id`) REFERENCES `conversations`(`id`) ON UPDATE no action ON DELETE no action\n);\n--> statement-breakpoint\nCREATE UNIQUE INDEX `conversations_share_id_unique` ON `conversations` (`share_id`);--> statement-breakpoint\nCREATE UNIQUE INDEX `conversations_share_id_idx` ON `conversations` (`share_id`);--> statement-breakpoint\nCREATE INDEX `conversations_parent_id_idx` ON `conversations` (`parent_id`);--> statement-breakpoint\nCREATE INDEX `conversations_updated_at_idx` ON `conversations` (`updated_at`);--> statement-breakpoint\nCREATE TABLE `generated_images` (\n	`id` text PRIMARY KEY NOT NULL,\n	`message_id` text NOT NULL,\n	`prompt` text NOT NULL,\n	`model` text NOT NULL,\n	`provider` text NOT NULL,\n	`image_url` text,\n	`image_data` blob,\n	`width` integer,\n	`height` integer,\n	`created_at` integer NOT NULL,\n	`last_sync_at` integer,\n	`is_deleted` integer DEFAULT false,\n	FOREIGN KEY (`message_id`) REFERENCES `messages`(`id`) ON UPDATE no action ON DELETE cascade\n);\n--> statement-breakpoint\nCREATE INDEX `generated_images_message_id_idx` ON `generated_images` (`message_id`);--> statement-breakpoint\nCREATE TABLE `messages` (\n	`id` text PRIMARY KEY NOT NULL,\n	`conversation_id` text NOT NULL,\n	`role` text NOT NULL,\n	`content` text NOT NULL,\n	`model` text,\n	`provider` text,\n	`token_count` integer,\n	`order` integer NOT NULL,\n	`parent_message_id` text,\n	`is_streaming` integer DEFAULT false,\n	`stream_completed` integer DEFAULT true,\n	`created_at` integer NOT NULL,\n	`updated_at` integer NOT NULL,\n	`last_sync_at` integer,\n	`is_deleted` integer DEFAULT false,\n	FOREIGN KEY (`conversation_id`) REFERENCES `conversations`(`id`) ON UPDATE no action ON DELETE cascade,\n	FOREIGN KEY (`parent_message_id`) REFERENCES `messages`(`id`) ON UPDATE no action ON DELETE no action\n);\n--> statement-breakpoint\nCREATE INDEX `messages_conversation_id_idx` ON `messages` (`conversation_id`);--> statement-breakpoint\nCREATE INDEX `messages_order_idx` ON `messages` (`conversation_id`,`order`);--> statement-breakpoint\nCREATE INDEX `messages_parent_message_id_idx` ON `messages` (`parent_message_id`);--> statement-breakpoint\nCREATE TABLE `model_providers` (\n	`id` text PRIMARY KEY NOT NULL,\n	`name` text NOT NULL,\n	`api_endpoint` text NOT NULL,\n	`supported_models` text,\n	`is_active` integer DEFAULT true,\n	`created_at` integer NOT NULL,\n	`updated_at` integer NOT NULL\n);\n--> statement-breakpoint\nCREATE TABLE `shared_access` (\n	`id` text PRIMARY KEY NOT NULL,\n	`conversation_id` text NOT NULL,\n	`share_id` text NOT NULL,\n	`access_level` text DEFAULT 'read' NOT NULL,\n	`expires_at` integer,\n	`created_at` integer NOT NULL,\n	`last_accessed_at` integer,\n	FOREIGN KEY (`conversation_id`) REFERENCES `conversations`(`id`) ON UPDATE no action ON DELETE cascade\n);\n--> statement-breakpoint\nCREATE UNIQUE INDEX `shared_access_share_id_idx` ON `shared_access` (`share_id`);--> statement-breakpoint\nCREATE INDEX `shared_access_conversation_id_idx` ON `shared_access` (`conversation_id`);--> statement-breakpoint\nCREATE TABLE `sync_metadata` (\n	`id` text PRIMARY KEY NOT NULL,\n	`table_name` text NOT NULL,\n	`record_id` text NOT NULL,\n	`last_modified` integer NOT NULL,\n	`version` integer DEFAULT 1 NOT NULL,\n	`checksum` text,\n	`conflict_resolved` integer DEFAULT false\n);\n--> statement-breakpoint\nCREATE TABLE `usage` (\n	`id` text PRIMARY KEY NOT NULL,\n	`conversation_id` text,\n	`message_id` text,\n	`model` text NOT NULL,\n	`provider` text NOT NULL,\n	`prompt_tokens` integer DEFAULT 0 NOT NULL,\n	`completion_tokens` integer DEFAULT 0 NOT NULL,\n	`total_tokens` integer DEFAULT 0 NOT NULL,\n	`cost` integer DEFAULT 0 NOT NULL,\n	`created_at` integer NOT NULL,\n	FOREIGN KEY (`conversation_id`) REFERENCES `conversations`(`id`) ON UPDATE no action ON DELETE set null,\n	FOREIGN KEY (`message_id`) REFERENCES `messages`(`id`) ON UPDATE no action ON DELETE set null\n);\n--> statement-breakpoint\nCREATE UNIQUE INDEX `usage_message_id_unique` ON `usage` (`message_id`);--> statement-breakpoint\nCREATE INDEX `usage_conversation_id_idx` ON `usage` (`conversation_id`);--> statement-breakpoint\nCREATE INDEX `usage_model_idx` ON `usage` (`model`);--> statement-breakpoint\nCREATE INDEX `usage_created_at_idx` ON `usage` (`created_at`);--> statement-breakpoint\nCREATE TABLE `sessions` (\n	`id` text PRIMARY KEY NOT NULL,\n	`user_id` text NOT NULL,\n	`session_token` text NOT NULL,\n	`refresh_token` text,\n	`metadata` text,\n	`is_active` integer DEFAULT false,\n	`requires_2fa` integer DEFAULT false,\n	`is_2fa_verified` integer DEFAULT false,\n	`expires_at` integer NOT NULL,\n	`last_accessed_at` integer,\n	`created_at` integer NOT NULL,\n	`updated_at` integer NOT NULL\n);\n--> statement-breakpoint\nCREATE UNIQUE INDEX `sessions_session_token_unique` ON `sessions` (`session_token`);--> statement-breakpoint\nCREATE UNIQUE INDEX `sessions_refresh_token_unique` ON `sessions` (`refresh_token`);--> statement-breakpoint\nCREATE INDEX `sessions_user_id_idx` ON `sessions` (`user_id`);--> statement-breakpoint\nCREATE UNIQUE INDEX `sessions_session_token_idx` ON `sessions` (`session_token`);--> statement-breakpoint\nCREATE UNIQUE INDEX `sessions_refresh_token_idx` ON `sessions` (`refresh_token`);--> statement-breakpoint\nCREATE INDEX `sessions_expires_at_idx` ON `sessions` (`expires_at`);",ee='PRAGMA foreign_keys=OFF;--> statement-breakpoint\nCREATE TABLE `__new_attachments` (\n	`id` text PRIMARY KEY NOT NULL,\n	`message_id` text,\n	`file_name` text NOT NULL,\n	`file_type` text NOT NULL,\n	`file_size` integer NOT NULL,\n	`mime_type` text NOT NULL,\n	`data` blob,\n	`storage_url` text,\n	`created_at` integer NOT NULL,\n	`last_sync_at` integer,\n	`is_deleted` integer DEFAULT false\n);\n--> statement-breakpoint\nINSERT INTO `__new_attachments`("id", "message_id", "file_name", "file_type", "file_size", "mime_type", "data", "storage_url", "created_at", "last_sync_at", "is_deleted") SELECT "id", "message_id", "file_name", "file_type", "file_size", "mime_type", "data", "storage_url", "created_at", "last_sync_at", "is_deleted" FROM `attachments`;--> statement-breakpoint\nDROP TABLE `attachments`;--> statement-breakpoint\nALTER TABLE `__new_attachments` RENAME TO `attachments`;--> statement-breakpoint\nPRAGMA foreign_keys=ON;--> statement-breakpoint\nCREATE INDEX `attachments_message_id_idx` ON `attachments` (`message_id`);',te="ALTER TABLE `attachments` ADD `conversation_id` text NOT NULL;",ne="ALTER TABLE `messages` ADD `reasoning_content` text;";function ie(n){return n.split("--> statement-breakpoint").map(t=>t.trim()).filter(t=>t.length>0&&!t.startsWith("--")&&!t.startsWith("PRAGMA foreign_keys")&&!t.startsWith("/*")&&t!=="-->"&&!t.includes("-- statement-breakpoint")&&!t.includes("CREATE TABLE `sessions`")&&!t.includes("sessions_")&&!t.includes("ON `sessions`")).map(t=>t.replace(/^--> statement-breakpoint\s*/gm,"").replace(/^--.*$/gm,"").split(`
`).map(s=>s.trim()).filter(s=>s.length>0&&!s.startsWith("--")).join(`
`).trim()).filter(t=>t.length>0)}const se=()=>[{idMonotonicInc:0,description:"Create settings table for migration tracking",sql:`
        CREATE TABLE IF NOT EXISTS settings (
          id TEXT PRIMARY KEY,
          value TEXT
        );
      `},{idMonotonicInc:1,description:"Create chat tables (filtered from backend schema)",sql:H},{idMonotonicInc:2,description:"Update attachments table structure",sql:ee},{idMonotonicInc:3,description:"Add conversation_id to attachments table",sql:te},{idMonotonicInc:4,description:"Add reasoning_content column to messages table",sql:ne}];class ae{constructor(e){c(this,"_config");c(this,"_migrations");c(this,"_lastMigrationMonotonicId",-1);this._config=e;const t=[...e.migrations];t.sort((o,r)=>o.idMonotonicInc-r.idMonotonicInc);const s=new Set;t.forEach(o=>{if(o.idMonotonicInc<0)throw new Error(`migration ID cannot be negative: ${o.idMonotonicInc}`);if(s.has(o.idMonotonicInc))throw new Error(`duplicate migration ID detected: ${o.idMonotonicInc}`);s.add(o.idMonotonicInc)}),this._migrations=t}hasMigrationsToRun(){return this._migrations.length?this._lastMigrationMonotonicId!==this._migrations[this._migrations.length-1].idMonotonicInc:!1}async runAll(e){const t={rowsRead:0,rowsWritten:0};if(!this.hasMigrationsToRun())return t;const{sql:s}=this._config.sqliteInstance;let o,r=null;try{r=await s`SELECT value FROM settings WHERE id = 'migration_version'`}catch(l){l!=null&&l.message&&!l.message.toLowerCase().includes("no such table")&&console.error("Unexpected migration version check error:",l)}r!=null&&r.length>0&&(o=r[0].value??null),this._lastMigrationMonotonicId=o??-1;let u=0,E=this._migrations.length;for(;u<E&&this._migrations[u].idMonotonicInc<=this._lastMigrationMonotonicId;)u+=1;if(u>=E)return t;const{transaction:m}=this._config.sqliteInstance,_=this._migrations.slice(u);try{await m(async l=>{for(const L of _){const k=L.sql??(e==null?void 0:e(L.idMonotonicInc));if(!k)throw new Error(`migration with neither 'sql' nor 'sqlGen' provided: ${L.idMonotonicInc}`);console.log(`Running migration ${L.idMonotonicInc}: ${L.description}`);const y=ie(k);console.log(`Parsed ${y.length} statements for migration ${L.idMonotonicInc}`);for(let I=0;I<y.length;I++){const U=y[I].trim();if(U){console.log(`Executing statement ${I+1}:`,U.substring(0,100)+"...");try{await l.sql(U)}catch(G){throw console.error(`Failed to execute statement ${I+1}:`,U),G}}}await l.sql`INSERT OR REPLACE INTO settings (id, value) VALUES ('migration_version', ${L.idMonotonicInc})`}}),this._lastMigrationMonotonicId=_[_.length-1].idMonotonicInc,console.log(`Completed ${_.length} migrations`)}catch(l){throw console.error("Migration failed:",l),new Error(`MIGRATION_FAILED: ${l.message}`)}return t}}/**
 * uuidv7: A JavaScript implementation of UUID version 7
 *
 * Copyright 2021-2024 LiosK
 *
 * @license Apache-2.0
 * @packageDocumentation
 */const v="0123456789abcdef";class p{constructor(e){this.bytes=e}static ofInner(e){if(e.length!==16)throw new TypeError("not 128-bit length");return new p(e)}static fromFieldsV7(e,t,s,o){if(!Number.isInteger(e)||!Number.isInteger(t)||!Number.isInteger(s)||!Number.isInteger(o)||e<0||t<0||s<0||o<0||e>0xffffffffffff||t>4095||s>1073741823||o>4294967295)throw new RangeError("invalid field value");const r=new Uint8Array(16);return r[0]=e/2**40,r[1]=e/2**32,r[2]=e/2**24,r[3]=e/2**16,r[4]=e/2**8,r[5]=e,r[6]=112|t>>>8,r[7]=t,r[8]=128|s>>>24,r[9]=s>>>16,r[10]=s>>>8,r[11]=s,r[12]=o>>>24,r[13]=o>>>16,r[14]=o>>>8,r[15]=o,new p(r)}static parse(e){var t,s,o,r;let u;switch(e.length){case 32:u=(t=/^[0-9a-f]{32}$/i.exec(e))===null||t===void 0?void 0:t[0];break;case 36:u=(s=/^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i.exec(e))===null||s===void 0?void 0:s.slice(1,6).join("");break;case 38:u=(o=/^\{([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})\}$/i.exec(e))===null||o===void 0?void 0:o.slice(1,6).join("");break;case 45:u=(r=/^urn:uuid:([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i.exec(e))===null||r===void 0?void 0:r.slice(1,6).join("");break}if(u){const E=new Uint8Array(16);for(let m=0;m<16;m+=4){const _=parseInt(u.substring(2*m,2*m+8),16);E[m+0]=_>>>24,E[m+1]=_>>>16,E[m+2]=_>>>8,E[m+3]=_}return new p(E)}else throw new SyntaxError("could not parse UUID string")}toString(){let e="";for(let t=0;t<this.bytes.length;t++)e+=v.charAt(this.bytes[t]>>>4),e+=v.charAt(this.bytes[t]&15),(t===3||t===5||t===7||t===9)&&(e+="-");return e}toHex(){let e="";for(let t=0;t<this.bytes.length;t++)e+=v.charAt(this.bytes[t]>>>4),e+=v.charAt(this.bytes[t]&15);return e}toJSON(){return this.toString()}getVariant(){const e=this.bytes[8]>>>4;if(e<0)throw new Error("unreachable");if(e<=7)return this.bytes.every(t=>t===0)?"NIL":"VAR_0";if(e<=11)return"VAR_10";if(e<=13)return"VAR_110";if(e<=15)return this.bytes.every(t=>t===255)?"MAX":"VAR_RESERVED";throw new Error("unreachable")}getVersion(){return this.getVariant()==="VAR_10"?this.bytes[6]>>>4:void 0}clone(){return new p(this.bytes.slice(0))}equals(e){return this.compareTo(e)===0}compareTo(e){for(let t=0;t<16;t++){const s=this.bytes[t]-e.bytes[t];if(s!==0)return Math.sign(s)}return 0}}class V{constructor(e){this.timestamp=0,this.counter=0,this.random=e??re()}generate(){return this.generateOrResetCore(Date.now(),1e4)}generateOrAbort(){return this.generateOrAbortCore(Date.now(),1e4)}generateOrResetCore(e,t){let s=this.generateOrAbortCore(e,t);return s===void 0&&(this.timestamp=0,s=this.generateOrAbortCore(e,t)),s}generateOrAbortCore(e,t){if(!Number.isInteger(e)||e<1||e>0xffffffffffff)throw new RangeError("`unixTsMs` must be a 48-bit positive integer");if(t<0||t>0xffffffffffff)throw new RangeError("`rollbackAllowance` out of reasonable range");if(e>this.timestamp)this.timestamp=e,this.resetCounter();else if(e+t>=this.timestamp)this.counter++,this.counter>4398046511103&&(this.timestamp++,this.resetCounter());else return;return p.fromFieldsV7(this.timestamp,Math.trunc(this.counter/2**30),this.counter&2**30-1,this.random.nextUint32())}resetCounter(){this.counter=this.random.nextUint32()*1024+(this.random.nextUint32()&1023)}generateV4(){const e=new Uint8Array(Uint32Array.of(this.random.nextUint32(),this.random.nextUint32(),this.random.nextUint32(),this.random.nextUint32()).buffer);return e[6]=64|e[6]>>>4,e[8]=128|e[8]>>>2,p.ofInner(e)}}const re=()=>{if(typeof crypto<"u"&&typeof crypto.getRandomValues<"u")return new oe;if(typeof UUIDV7_DENY_WEAK_RNG<"u"&&UUIDV7_DENY_WEAK_RNG)throw new Error("no cryptographically strong RNG available");return{nextUint32:()=>Math.trunc(Math.random()*65536)*65536+Math.trunc(Math.random()*65536)}};class oe{constructor(){this.buffer=new Uint32Array(8),this.cursor=65535}nextUint32(){return this.cursor>=this.buffer.length&&(crypto.getRandomValues(this.buffer),this.cursor=0),this.buffer[this.cursor++]}}let C;const N=()=>Q().toString(),Q=()=>(C||(C=new V)).generate(),ue=Object.freeze(Object.defineProperty({__proto__:null,UUID:p,V7Generator:V,uuidv7:N,uuidv7obj:Q},Symbol.toStringTag,{value:"Module"}));f("user_settings",{id:i("id").primaryKey().$defaultFn(()=>"user_settings"),encryptedApiKeys:i("encrypted_api_keys",{mode:"json"}).$type(),preferences:i("preferences",{mode:"json"}).$type().$defaultFn(()=>({defaultModel:"gemini-2.5-flash-preview-05-20",defaultProvider:"google",theme:"light"})),balanceInOneHundreths:a("balance").notNull().default(500),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),updatedAt:a("updated_at",{mode:"timestamp"}).notNull().$onUpdateFn(()=>new Date)});const d=f("conversations",{id:i("id").primaryKey().$defaultFn(()=>N()),title:i("title").notNull(),model:i("model").notNull(),provider:i("provider").notNull(),systemPrompt:i("system_prompt"),isShared:a("is_shared",{mode:"boolean"}).default(!1),shareId:i("share_id").unique().$defaultFn(()=>N()),parentId:i("parent_id"),branchPoint:a("branch_point"),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),updatedAt:a("updated_at",{mode:"timestamp"}).notNull().$onUpdateFn(()=>new Date),lastSyncAt:a("last_sync_at",{mode:"timestamp"}),isDeleted:a("is_deleted",{mode:"boolean"}).default(!1)},n=>[X("conversations_share_id_idx").on(n.shareId),g("conversations_parent_id_idx").on(n.parentId),g("conversations_updated_at_idx").on(n.updatedAt),z({columns:[n.parentId],foreignColumns:[n.id]})]),h=f("messages",{id:i("id").primaryKey().$defaultFn(()=>N()),conversationId:i("conversation_id").notNull().references(()=>d.id,{onDelete:"cascade"}),role:i("role",{enum:["user","assistant","system"]}).notNull(),content:i("content").notNull(),reasoningContent:i("reasoning_content"),model:i("model"),provider:i("provider"),tokenCount:a("token_count"),order:a("order").notNull(),parentMessageId:i("parent_message_id"),isStreaming:a("is_streaming",{mode:"boolean"}).default(!1),streamCompleted:a("stream_completed",{mode:"boolean"}).default(!0),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),updatedAt:a("updated_at",{mode:"timestamp"}).notNull().$onUpdateFn(()=>new Date),lastSyncAt:a("last_sync_at",{mode:"timestamp"}),isDeleted:a("is_deleted",{mode:"boolean"}).default(!1)},n=>[g("messages_conversation_id_idx").on(n.conversationId),g("messages_order_idx").on(n.conversationId,n.order),g("messages_parent_message_id_idx").on(n.parentMessageId),z({columns:[n.parentMessageId],foreignColumns:[n.id]})]);f("attachments",{id:i("id").primaryKey().$defaultFn(()=>N()),messageId:i("message_id"),conversationId:i("conversation_id").notNull(),fileName:i("file_name").notNull(),fileType:i("file_type").notNull(),fileSize:a("file_size").notNull(),mimeType:i("mime_type").notNull(),data:S("data"),storageUrl:i("storage_url"),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),lastSyncAt:a("last_sync_at",{mode:"timestamp"}),isDeleted:a("is_deleted",{mode:"boolean"}).default(!1)},n=>[g("attachments_message_id_idx").on(n.messageId)]);f("generated_images",{id:i("id").primaryKey().$defaultFn(()=>N()),messageId:i("message_id").notNull().references(()=>h.id,{onDelete:"cascade"}),prompt:i("prompt").notNull(),model:i("model").notNull(),provider:i("provider").notNull(),imageUrl:i("image_url"),imageData:S("image_data"),width:a("width"),height:a("height"),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),lastSyncAt:a("last_sync_at",{mode:"timestamp"}),isDeleted:a("is_deleted",{mode:"boolean"}).default(!1)},n=>[g("generated_images_message_id_idx").on(n.messageId)]);f("sync_metadata",{id:i("id").primaryKey().$defaultFn(()=>N()),tableName:i("table_name").notNull(),recordId:i("record_id").notNull(),lastModified:a("last_modified",{mode:"timestamp"}).notNull(),version:a("version").notNull().default(1),checksum:i("checksum"),conflictResolved:a("conflict_resolved",{mode:"boolean"}).default(!1)});f("shared_access",{id:i("id").primaryKey().$defaultFn(()=>N()),conversationId:i("conversation_id").notNull().references(()=>d.id,{onDelete:"cascade"}),shareId:i("share_id").notNull(),accessLevel:i("access_level",{enum:["read","comment"]}).notNull().default("read"),expiresAt:a("expires_at",{mode:"timestamp"}),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),lastAccessedAt:a("last_accessed_at",{mode:"timestamp"})},n=>[X("shared_access_share_id_idx").on(n.shareId),g("shared_access_conversation_id_idx").on(n.conversationId)]);f("model_providers",{id:i("id").primaryKey().$defaultFn(()=>N()),name:i("name").notNull(),apiEndpoint:i("api_endpoint").notNull(),supportedModels:i("supported_models",{mode:"json"}).$type(),isActive:a("is_active",{mode:"boolean"}).default(!0),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date),updatedAt:a("updated_at",{mode:"timestamp"}).notNull().$onUpdateFn(()=>new Date)});f("usage",{id:i("id").primaryKey().$defaultFn(()=>N()),conversationId:i("conversation_id").references(()=>d.id,{onDelete:"set null"}),messageId:i("message_id").references(()=>h.id,{onDelete:"set null"}).unique(),model:i("model").notNull(),provider:i("provider").notNull(),promptTokens:a("prompt_tokens").notNull().default(0),completionTokens:a("completion_tokens").notNull().default(0),totalTokens:a("total_tokens").notNull().default(0),cost:a("cost").notNull().default(0),createdAt:a("created_at",{mode:"timestamp"}).notNull().$defaultFn(()=>new Date)},n=>[g("usage_conversation_id_idx").on(n.conversationId),g("usage_model_idx").on(n.model),g("usage_created_at_idx").on(n.createdAt)]);const me=f("settings",{id:i("id").primaryKey(),value:i("value").notNull()}),T=class T{constructor(){c(this,"sqLocalDriver",null);c(this,"initialized",!1);c(this,"initializing",!1);c(this,"db",null);c(this,"currentUserId",null)}static getInstance(){return T.instance||(T.instance=new T),T.instance}async initialize(e){if(this.initialized&&this.db&&this.currentUserId===e)return this.db;if(this.initialized&&this.currentUserId!==e&&(console.log(`Switching database from user ${this.currentUserId} to ${e}`),await this.cleanup()),this.initializing){const s=Date.now();for(;this.initializing&&Date.now()-s<3e4;)await new Promise(o=>setTimeout(o,100));if(this.db&&this.currentUserId===e)return this.db;if(this.initializing)throw new Error("Database initialization timeout")}this.initializing=!0;try{console.log(`Initializing SQLite database for user: ${e}`);const t=`durachat-${e}.db`,s=new Promise((m,_)=>{try{const l=new B(t);m(l)}catch(l){_(l)}}),o=new Promise((m,_)=>{setTimeout(()=>_(new Error("SQLocal initialization timeout")),15e3)});this.sqLocalDriver=await Promise.race([s,o]),console.log(`SQLocal initialized for ${t}, running migrations...`);const r=new ae({sqliteInstance:this.sqLocalDriver,migrations:se()});console.log("Running database migrations..."),await r.runAll(),console.log("Testing database connection...");const{sql:u}=this.sqLocalDriver,E=await u`SELECT COUNT(*) as count FROM settings`;return console.log("Database test query result:",E),this.initialized=!0,this.currentUserId=e,console.log(`Database initialized successfully for user: ${e}`),this.db=J(this.sqLocalDriver.driver,this.sqLocalDriver.batchDriver),this.db}catch(t){throw console.error("Failed to initialize database:",t),this.sqLocalDriver=null,this.initialized=!1,this.currentUserId=null,t}finally{this.initializing=!1}}async getDb(){if(!this.db||!this.initialized)throw new Error("Database not initialized. Call initialize(userId) first.");return this.db}async cleanup(){console.log("Cleaning up database connection...");try{this.sqLocalDriver&&(this.sqLocalDriver=null),this.db=null,this.initialized=!1,this.currentUserId=null}catch(e){console.error("Error during database cleanup:",e)}}getCurrentUserId(){return this.currentUserId}isInitialized(){return this.initialized}isInitializing(){return this.initializing}};c(T,"instance");let O=T;const A=O.getInstance();f("settings",{id:i("id").primaryKey(),value:i("value").notNull()});async function _e(n){const e=await A.getDb(),t=n.id||N(),s=new Date;return await e.insert(d).values({id:t,title:n.title||"New Conversation",model:n.model||"claude-3-sonnet",provider:n.provider||"anthropic",systemPrompt:n.systemPrompt||null,createdAt:s,updatedAt:s}),t}async function ge(n){return(await(await A.getDb()).select().from(d).where(P(b(d.id,n),R(b(d.isDeleted,!1),x(d.isDeleted)))).limit(1))[0]||null}async function Ne(n=10){return await(await A.getDb()).select().from(d).where(R(b(d.isDeleted,!1),x(d.isDeleted))).orderBy(Z(d.updatedAt)).limit(n)}async function fe(n,e){await(await A.getDb()).update(d).set({title:e,updatedAt:new Date}).where(b(d.id,n))}async function Ee(n){await(await A.getDb()).update(d).set({isDeleted:!0,updatedAt:new Date}).where(b(d.id,n))}async function he(n){return await(await A.getDb()).select().from(h).where(P(b(h.conversationId,n),R(b(h.isDeleted,!1),x(h.isDeleted)))).orderBy(h.order)}async function pe(){const n=await A.getDb();console.log("🗑️ Clearing all conversations and messages from local SQLite database"),await n.delete(h),await n.delete(d),console.log("✅ Local SQLite database cleared")}function Le(){if(typeof document>"u")return null;const e=document.cookie.split(";").find(s=>s.trim().startsWith("user_do_id="));if(!e)return null;const t=e.trim().split("=")[1];return t&&t!==""?t:null}async function Te(){try{return(await q.test.validatetest.$get()).ok}catch(n){return console.error("Session verification failed:",n),!1}}function be(){typeof document>"u"||(document.cookie="user_do_id=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT")}async function Ae(){try{return!!(await q.auth.register.$post({query:{}})).ok}catch(n){return console.error("Failed to create anonymous session:",n),!1}}export{ge as a,he as b,pe as c,A as d,_e as e,be as f,Le as g,Ae as h,d as i,Ne as j,Ee as k,ue as l,h as m,me as s,fe as u,Te as v};
